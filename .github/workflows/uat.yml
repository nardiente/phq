name: Sync Build Files to S3 uat

on:
  push:
    branches:
      - uat

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.20.3'

      - name: Set up local environment variables
        run: |
          touch .env.local
          echo VITE_API_HOST=${{vars.API_HOST_UAT}} >> .env.local
          echo VITE_API_HOST_PUBLIC=${{vars.API_HOST_PUBLIC_UAT}} >> .env.local
          echo VITE_SYSTEM_TYPE=${{vars.SYSTEM_TYPE_ADMIN}} >> .env.local
          echo VITE_SOCKET_URL=${{vars.SOCKET_URL_UAT}} >> .env.local
          echo VITE_GITHUB_CLIENT_ID=${{vars.CLIENT_ID_UAT}} >> .env.local
          echo VITE_CRYPTO_KEY=${{secrets.CRYPTO_KEY_UAT}} >> .env.local
          echo VITE_SURVEY_FORM_URL=${{vars.SURVEY_FORM_URL_UAT}} >> .env.local

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{vars.AWS_REGION}}

      - name: Sync files to S3
        run: |
          aws s3 sync ./dist s3://${{vars.AWS_S3_BUCKET_UAT}} --acl public-read
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Install SSH
        run: sudo apt-get update && sudo apt-get install -y openssh-client

      - name: Add public IP to EC2 security group
        run: |
          PUBLIC_IP=$(curl -s http://checkip.amazonaws.com)
          aws ec2 authorize-security-group-ingress --group-id ${{ vars.AWS_SECURITY_GROUP_ID_UAT }} --protocol tcp --port 22 --cidr $PUBLIC_IP/32
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ vars.AWS_REGION }}

      - name: Copy build files to EC2 instance
        run: |
          touch id_rsa
          echo ${{ secrets.AWS_EC2_KEY }} >> id_rsa
          scp -o StrictHostKeyChecking=no -i /id_rsa -r ./dist/* ${{ vars.AWS_EC2_USER }}@${{ vars.AWS_EC2_INSTANCE_IP_UAT }}:/home/nino/uat/productfeedback-skywalk/dist/
        env:
          EC2_KEY: ${{ secrets.AWS_EC2_KEY }}
          EC2_INSTANCE_IP: ${{ vars.AWS_EC2_INSTANCE_IP_UAT }}

      - name: Remove public IP from EC2 security group
        run: |
          PUBLIC_IP=$(curl -s http://checkip.amazonaws.com)
          aws ec2 revoke-security-group-ingress --group-id ${{ vars.AWS_SECURITY_GROUP_ID_UAT }} --protocol tcp --port 22 --cidr $PUBLIC_IP/32
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ vars.AWS_REGION }}
