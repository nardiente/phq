import React from 'react';

// Ensure these classes are generated by Tailwind
// bg-gray-500 text-gray-500 border-gray-500
// bg-emerald-500 text-emerald-500 border-emerald-500
// bg-blue-500 text-blue-500 border-blue-500
// bg-purple-500 text-purple-500 border-purple-500
// bg-red-500 text-red-500 border-red-500
// bg-orange-500 text-orange-500 border-orange-500
// bg-yellow-500 text-yellow-500 border-yellow-500
// bg-white text-white border-white

interface BadgeProps {
    type: 'white' | 'outlined' | 'soft' | 'solid';
    text: string;
    size?: 'sm' | 'md' | 'lg';
    shape?: 'rounded' | 'pilled';
    color?: 'gray' | 'gray-light' | 'emerald' | 'blue' | 'purple' | 'red' | 'orange' | 'yellow' | 'white' | 'custom-gray' | 'custom-orange';
}

const BadgeComponent: React.FC<BadgeProps> = ({ type, text, size = 'md', shape = 'rounded', color = 'gray' }) => {
    const getBadgeClasses = () => {
        switch (type) {
            case 'white':
                return 'border border-gray-200 bg-white text-gray-800';
            case 'outlined':
                return `border ${getColorClasses()} text-${color}-500`;
            case 'soft':
                return `bg-${color}-100 text-${color}-500`;
            case 'solid':
                return `bg-${getSolidColorClasses()} text-white`;
            default:
                return '';
        }
    };

    const getSizeClasses = () => {
        switch (size) {
            case 'sm':
                return 'px-1 py-0.5 text-[10px]';
            case 'lg':
                return 'px-2.5 py-2 text-xs';
            default:
                return 'px-1.5 py-1 text-xs';
        }
    };

    const getShapeClasses = () => {
        switch (shape) {
            case 'pilled':
                return 'rounded-full';
            default:
                return 'rounded-[5px]';
        }
    };

    const getColorClasses = () => {
        switch (color) {
            case 'gray':
                return 'border-gray-400';
            case 'gray-light':
                return 'border-gray-200';
            case 'emerald':
                return 'border-emerald-200';
            case 'blue':
                return 'border-blue-200';
            case 'purple':
                return 'border-purple-200';
            case 'red':
                return 'border-red-200';
            case 'orange':
                return 'border-orange-200';
            case 'yellow':
                return 'border-yellow-200';
            case 'white':
                return 'border-white';
            default:
                return 'border-gray-400';
        }
    };

    const getSolidColorClasses = () => {
        switch (color) {
            case 'gray':
                return 'gray-800';
            case 'gray-light':
                return 'gray-600';
            case 'emerald':
                return 'emerald-500';
            case 'blue':
                return 'blue-500';
            case 'purple':
                return 'purple-600';
            case 'red':
                return 'red-500';
            case 'orange':
                return 'orange-500';
            case 'yellow':
                return 'yellow-500';
            case 'white':
                return 'white';
            case 'custom-gray':
                return '[#4d4566]';
            case 'custom-orange':
                return '[#ff6334]';
            default:
                return 'gray-800';
        }
    };

    return (
        <div className={`flex gap-px items-center ${getBadgeClasses()} ${getSizeClasses()} ${getShapeClasses()}`}>
            <div className="px-1 flex gap-[7px] items-center">
                <div className="pt-0 pb-0.5 flex gap-0 items-start">
                    <small className="leading-4 tracking-[0.005em] font-bold">
                        {text}
                    </small>
                </div>
            </div>
        </div>
    );
};

export default BadgeComponent; 